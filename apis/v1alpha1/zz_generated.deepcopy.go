//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	"k8s.io/apimachinery/pkg/runtime"
	"net/http"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosCondition) DeepCopyInto(out *ChaosCondition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosCondition.
func (in *ChaosCondition) DeepCopy() *ChaosCondition {
	if in == nil {
		return nil
	}
	out := new(ChaosCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosOnlyScheduleSpec) DeepCopyInto(out *ChaosOnlyScheduleSpec) {
	*out = *in
	if in.StartingDeadlineSeconds != nil {
		in, out := &in.StartingDeadlineSeconds, &out.StartingDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	in.EmbedChaos.DeepCopyInto(&out.EmbedChaos)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosOnlyScheduleSpec.
func (in *ChaosOnlyScheduleSpec) DeepCopy() *ChaosOnlyScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(ChaosOnlyScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChaosStatus) DeepCopyInto(out *ChaosStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]ChaosCondition, len(*in))
		copy(*out, *in)
	}
	in.Experiment.DeepCopyInto(&out.Experiment)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChaosStatus.
func (in *ChaosStatus) DeepCopy() *ChaosStatus {
	if in == nil {
		return nil
	}
	out := new(ChaosStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClockSpec) DeepCopyInto(out *ClockSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClockSpec.
func (in *ClockSpec) DeepCopy() *ClockSpec {
	if in == nil {
		return nil
	}
	out := new(ClockSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionalBranch) DeepCopyInto(out *ConditionalBranch) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionalBranch.
func (in *ConditionalBranch) DeepCopy() *ConditionalBranch {
	if in == nil {
		return nil
	}
	out := new(ConditionalBranch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionalBranchStatus) DeepCopyInto(out *ConditionalBranchStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionalBranchStatus.
func (in *ConditionalBranchStatus) DeepCopy() *ConditionalBranchStatus {
	if in == nil {
		return nil
	}
	out := new(ConditionalBranchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConditionalBranchesStatus) DeepCopyInto(out *ConditionalBranchesStatus) {
	*out = *in
	if in.Branches != nil {
		in, out := &in.Branches, &out.Branches
		*out = make([]ConditionalBranchStatus, len(*in))
		copy(*out, *in)
	}
	if in.Context != nil {
		in, out := &in.Context, &out.Context
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConditionalBranchesStatus.
func (in *ConditionalBranchesStatus) DeepCopy() *ConditionalBranchesStatus {
	if in == nil {
		return nil
	}
	out := new(ConditionalBranchesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ContainerSelector) DeepCopyInto(out *ContainerSelector) {
	*out = *in
	in.PodSelector.DeepCopyInto(&out.PodSelector)
	if in.ContainerNames != nil {
		in, out := &in.ContainerNames, &out.ContainerNames
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ContainerSelector.
func (in *ContainerSelector) DeepCopy() *ContainerSelector {
	if in == nil {
		return nil
	}
	out := new(ContainerSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskFileSpec) DeepCopyInto(out *DiskFileSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskFileSpec.
func (in *DiskFileSpec) DeepCopy() *DiskFileSpec {
	if in == nil {
		return nil
	}
	out := new(DiskFileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskFillSpec) DeepCopyInto(out *DiskFillSpec) {
	*out = *in
	out.DiskFileSpec = in.DiskFileSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskFillSpec.
func (in *DiskFillSpec) DeepCopy() *DiskFillSpec {
	if in == nil {
		return nil
	}
	out := new(DiskFillSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DiskPayloadSpec) DeepCopyInto(out *DiskPayloadSpec) {
	*out = *in
	out.DiskFileSpec = in.DiskFileSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DiskPayloadSpec.
func (in *DiskPayloadSpec) DeepCopy() *DiskPayloadSpec {
	if in == nil {
		return nil
	}
	out := new(DiskPayloadSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbedChaos) DeepCopyInto(out *EmbedChaos) {
	*out = *in
	if in.JVMChaos != nil {
		in, out := &in.JVMChaos, &out.JVMChaos
		*out = new(JVMChaosSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.PhysicalMachineChaos != nil {
		in, out := &in.PhysicalMachineChaos, &out.PhysicalMachineChaos
		*out = new(PhysicalMachineChaosSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbedChaos.
func (in *EmbedChaos) DeepCopy() *EmbedChaos {
	if in == nil {
		return nil
	}
	out := new(EmbedChaos)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EmbedStatusCheck) DeepCopyInto(out *EmbedStatusCheck) {
	*out = *in
	if in.HTTPStatusCheck != nil {
		in, out := &in.HTTPStatusCheck, &out.HTTPStatusCheck
		*out = new(HTTPStatusCheck)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EmbedStatusCheck.
func (in *EmbedStatusCheck) DeepCopy() *EmbedStatusCheck {
	if in == nil {
		return nil
	}
	out := new(EmbedStatusCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExpInfo) DeepCopyInto(out *ExpInfo) {
	*out = *in
	if in.StressCPU != nil {
		in, out := &in.StressCPU, &out.StressCPU
		*out = new(StressCPUSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.StressMemory != nil {
		in, out := &in.StressMemory, &out.StressMemory
		*out = new(StressMemorySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.DiskReadPayload != nil {
		in, out := &in.DiskReadPayload, &out.DiskReadPayload
		*out = new(DiskPayloadSpec)
		**out = **in
	}
	if in.DiskWritePayload != nil {
		in, out := &in.DiskWritePayload, &out.DiskWritePayload
		*out = new(DiskPayloadSpec)
		**out = **in
	}
	if in.DiskFill != nil {
		in, out := &in.DiskFill, &out.DiskFill
		*out = new(DiskFillSpec)
		**out = **in
	}
	if in.NetworkCorrupt != nil {
		in, out := &in.NetworkCorrupt, &out.NetworkCorrupt
		*out = new(NetworkCorruptSpec)
		**out = **in
	}
	if in.NetworkDuplicate != nil {
		in, out := &in.NetworkDuplicate, &out.NetworkDuplicate
		*out = new(NetworkDuplicateSpec)
		**out = **in
	}
	if in.NetworkLoss != nil {
		in, out := &in.NetworkLoss, &out.NetworkLoss
		*out = new(NetworkLossSpec)
		**out = **in
	}
	if in.NetworkDelay != nil {
		in, out := &in.NetworkDelay, &out.NetworkDelay
		*out = new(NetworkDelaySpec)
		**out = **in
	}
	if in.NetworkPartition != nil {
		in, out := &in.NetworkPartition, &out.NetworkPartition
		*out = new(NetworkPartitionSpec)
		**out = **in
	}
	if in.NetworkDNS != nil {
		in, out := &in.NetworkDNS, &out.NetworkDNS
		*out = new(NetworkDNSSpec)
		**out = **in
	}
	if in.NetworkBandwidth != nil {
		in, out := &in.NetworkBandwidth, &out.NetworkBandwidth
		*out = new(NetworkBandwidthSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkFlood != nil {
		in, out := &in.NetworkFlood, &out.NetworkFlood
		*out = new(NetworkFloodSpec)
		**out = **in
	}
	if in.NetworkDown != nil {
		in, out := &in.NetworkDown, &out.NetworkDown
		*out = new(NetworkDownSpec)
		**out = **in
	}
	if in.Process != nil {
		in, out := &in.Process, &out.Process
		*out = new(ProcessSpec)
		**out = **in
	}
	if in.JVMException != nil {
		in, out := &in.JVMException, &out.JVMException
		*out = new(JVMExceptionSpec)
		**out = **in
	}
	if in.JVMGC != nil {
		in, out := &in.JVMGC, &out.JVMGC
		*out = new(JVMGCSpec)
		**out = **in
	}
	if in.JVMLatency != nil {
		in, out := &in.JVMLatency, &out.JVMLatency
		*out = new(JVMLatencySpec)
		**out = **in
	}
	if in.JVMReturn != nil {
		in, out := &in.JVMReturn, &out.JVMReturn
		*out = new(JVMReturnSpec)
		**out = **in
	}
	if in.JVMStress != nil {
		in, out := &in.JVMStress, &out.JVMStress
		*out = new(JVMStressSpec)
		**out = **in
	}
	if in.JVMRuleData != nil {
		in, out := &in.JVMRuleData, &out.JVMRuleData
		*out = new(JVMRuleDataSpec)
		**out = **in
	}
	if in.JVMMySQL != nil {
		in, out := &in.JVMMySQL, &out.JVMMySQL
		*out = new(PMJVMMySQLSpec)
		**out = **in
	}
	if in.Clock != nil {
		in, out := &in.Clock, &out.Clock
		*out = new(ClockSpec)
		**out = **in
	}
	if in.RedisExpiration != nil {
		in, out := &in.RedisExpiration, &out.RedisExpiration
		*out = new(RedisExpirationSpec)
		**out = **in
	}
	if in.RedisPenetration != nil {
		in, out := &in.RedisPenetration, &out.RedisPenetration
		*out = new(RedisPenetrationSpec)
		**out = **in
	}
	if in.RedisCacheLimit != nil {
		in, out := &in.RedisCacheLimit, &out.RedisCacheLimit
		*out = new(RedisCacheLimitSpec)
		**out = **in
	}
	if in.RedisSentinelRestart != nil {
		in, out := &in.RedisSentinelRestart, &out.RedisSentinelRestart
		*out = new(RedisSentinelRestartSpec)
		**out = **in
	}
	if in.RedisSentinelStop != nil {
		in, out := &in.RedisSentinelStop, &out.RedisSentinelStop
		*out = new(RedisSentinelStopSpec)
		**out = **in
	}
	if in.KafkaFill != nil {
		in, out := &in.KafkaFill, &out.KafkaFill
		*out = new(KafkaFillSpec)
		**out = **in
	}
	if in.KafkaFlood != nil {
		in, out := &in.KafkaFlood, &out.KafkaFlood
		*out = new(KafkaFloodSpec)
		**out = **in
	}
	if in.KafkaIO != nil {
		in, out := &in.KafkaIO, &out.KafkaIO
		*out = new(KafkaIOSpec)
		**out = **in
	}
	if in.HTTPAbort != nil {
		in, out := &in.HTTPAbort, &out.HTTPAbort
		*out = new(HTTPAbortSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPDelay != nil {
		in, out := &in.HTTPDelay, &out.HTTPDelay
		*out = new(HTTPDelaySpec)
		(*in).DeepCopyInto(*out)
	}
	if in.HTTPConfig != nil {
		in, out := &in.HTTPConfig, &out.HTTPConfig
		*out = new(HTTPConfigSpec)
		**out = **in
	}
	if in.HTTPRequest != nil {
		in, out := &in.HTTPRequest, &out.HTTPRequest
		*out = new(HTTPRequestSpec)
		**out = **in
	}
	if in.FileCreate != nil {
		in, out := &in.FileCreate, &out.FileCreate
		*out = new(FileCreateSpec)
		**out = **in
	}
	if in.FileModifyPrivilege != nil {
		in, out := &in.FileModifyPrivilege, &out.FileModifyPrivilege
		*out = new(FileModifyPrivilegeSpec)
		**out = **in
	}
	if in.FileDelete != nil {
		in, out := &in.FileDelete, &out.FileDelete
		*out = new(FileDeleteSpec)
		**out = **in
	}
	if in.FileRename != nil {
		in, out := &in.FileRename, &out.FileRename
		*out = new(FileRenameSpec)
		**out = **in
	}
	if in.FileAppend != nil {
		in, out := &in.FileAppend, &out.FileAppend
		*out = new(FileAppendSpec)
		**out = **in
	}
	if in.FileReplace != nil {
		in, out := &in.FileReplace, &out.FileReplace
		*out = new(FileReplaceSpec)
		**out = **in
	}
	if in.VM != nil {
		in, out := &in.VM, &out.VM
		*out = new(VMSpec)
		**out = **in
	}
	if in.UserDefined != nil {
		in, out := &in.UserDefined, &out.UserDefined
		*out = new(UserDefinedSpec)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExpInfo.
func (in *ExpInfo) DeepCopy() *ExpInfo {
	if in == nil {
		return nil
	}
	out := new(ExpInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExperimentStatus) DeepCopyInto(out *ExperimentStatus) {
	*out = *in
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]*Record, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(Record)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExperimentStatus.
func (in *ExperimentStatus) DeepCopy() *ExperimentStatus {
	if in == nil {
		return nil
	}
	out := new(ExperimentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileAppendSpec) DeepCopyInto(out *FileAppendSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileAppendSpec.
func (in *FileAppendSpec) DeepCopy() *FileAppendSpec {
	if in == nil {
		return nil
	}
	out := new(FileAppendSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileCreateSpec) DeepCopyInto(out *FileCreateSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileCreateSpec.
func (in *FileCreateSpec) DeepCopy() *FileCreateSpec {
	if in == nil {
		return nil
	}
	out := new(FileCreateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileDeleteSpec) DeepCopyInto(out *FileDeleteSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileDeleteSpec.
func (in *FileDeleteSpec) DeepCopy() *FileDeleteSpec {
	if in == nil {
		return nil
	}
	out := new(FileDeleteSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileModifyPrivilegeSpec) DeepCopyInto(out *FileModifyPrivilegeSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileModifyPrivilegeSpec.
func (in *FileModifyPrivilegeSpec) DeepCopy() *FileModifyPrivilegeSpec {
	if in == nil {
		return nil
	}
	out := new(FileModifyPrivilegeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileRenameSpec) DeepCopyInto(out *FileRenameSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileRenameSpec.
func (in *FileRenameSpec) DeepCopy() *FileRenameSpec {
	if in == nil {
		return nil
	}
	out := new(FileRenameSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FileReplaceSpec) DeepCopyInto(out *FileReplaceSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FileReplaceSpec.
func (in *FileReplaceSpec) DeepCopy() *FileReplaceSpec {
	if in == nil {
		return nil
	}
	out := new(FileReplaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GenericSelectorSpec) DeepCopyInto(out *GenericSelectorSpec) {
	*out = *in
	if in.Namespaces != nil {
		in, out := &in.Namespaces, &out.Namespaces
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.FieldSelectors != nil {
		in, out := &in.FieldSelectors, &out.FieldSelectors
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.LabelSelectors != nil {
		in, out := &in.LabelSelectors, &out.LabelSelectors
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.ExpressionSelectors != nil {
		in, out := &in.ExpressionSelectors, &out.ExpressionSelectors
		*out = make(LabelSelectorRequirements, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AnnotationSelectors != nil {
		in, out := &in.AnnotationSelectors, &out.AnnotationSelectors
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GenericSelectorSpec.
func (in *GenericSelectorSpec) DeepCopy() *GenericSelectorSpec {
	if in == nil {
		return nil
	}
	out := new(GenericSelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPAbortSpec) DeepCopyInto(out *HTTPAbortSpec) {
	*out = *in
	in.HTTPCommonSpec.DeepCopyInto(&out.HTTPCommonSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPAbortSpec.
func (in *HTTPAbortSpec) DeepCopy() *HTTPAbortSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPAbortSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCommonSpec) DeepCopyInto(out *HTTPCommonSpec) {
	*out = *in
	if in.ProxyPorts != nil {
		in, out := &in.ProxyPorts, &out.ProxyPorts
		*out = make([]uint, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCommonSpec.
func (in *HTTPCommonSpec) DeepCopy() *HTTPCommonSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPCommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPConfigSpec) DeepCopyInto(out *HTTPConfigSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPConfigSpec.
func (in *HTTPConfigSpec) DeepCopy() *HTTPConfigSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPConfigSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPCriteria) DeepCopyInto(out *HTTPCriteria) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPCriteria.
func (in *HTTPCriteria) DeepCopy() *HTTPCriteria {
	if in == nil {
		return nil
	}
	out := new(HTTPCriteria)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPDelaySpec) DeepCopyInto(out *HTTPDelaySpec) {
	*out = *in
	in.HTTPCommonSpec.DeepCopyInto(&out.HTTPCommonSpec)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPDelaySpec.
func (in *HTTPDelaySpec) DeepCopy() *HTTPDelaySpec {
	if in == nil {
		return nil
	}
	out := new(HTTPDelaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPRequestSpec) DeepCopyInto(out *HTTPRequestSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPRequestSpec.
func (in *HTTPRequestSpec) DeepCopy() *HTTPRequestSpec {
	if in == nil {
		return nil
	}
	out := new(HTTPRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPStatusCheck) DeepCopyInto(out *HTTPStatusCheck) {
	*out = *in
	if in.RequestHeaders != nil {
		in, out := &in.RequestHeaders, &out.RequestHeaders
		*out = make(http.Header, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	out.Criteria = in.Criteria
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPStatusCheck.
func (in *HTTPStatusCheck) DeepCopy() *HTTPStatusCheck {
	if in == nil {
		return nil
	}
	out := new(HTTPStatusCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMChaos) DeepCopyInto(out *JVMChaos) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMChaos.
func (in *JVMChaos) DeepCopy() *JVMChaos {
	if in == nil {
		return nil
	}
	out := new(JVMChaos)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JVMChaos) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMChaosList) DeepCopyInto(out *JVMChaosList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]JVMChaos, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMChaosList.
func (in *JVMChaosList) DeepCopy() *JVMChaosList {
	if in == nil {
		return nil
	}
	out := new(JVMChaosList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *JVMChaosList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMChaosSpec) DeepCopyInto(out *JVMChaosSpec) {
	*out = *in
	in.ContainerSelector.DeepCopyInto(&out.ContainerSelector)
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	out.JVMParameter = in.JVMParameter
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMChaosSpec.
func (in *JVMChaosSpec) DeepCopy() *JVMChaosSpec {
	if in == nil {
		return nil
	}
	out := new(JVMChaosSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMChaosStatus) DeepCopyInto(out *JVMChaosStatus) {
	*out = *in
	in.ChaosStatus.DeepCopyInto(&out.ChaosStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMChaosStatus.
func (in *JVMChaosStatus) DeepCopy() *JVMChaosStatus {
	if in == nil {
		return nil
	}
	out := new(JVMChaosStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMClassMethodSpec) DeepCopyInto(out *JVMClassMethodSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMClassMethodSpec.
func (in *JVMClassMethodSpec) DeepCopy() *JVMClassMethodSpec {
	if in == nil {
		return nil
	}
	out := new(JVMClassMethodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMCommonSpec) DeepCopyInto(out *JVMCommonSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMCommonSpec.
func (in *JVMCommonSpec) DeepCopy() *JVMCommonSpec {
	if in == nil {
		return nil
	}
	out := new(JVMCommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMExceptionSpec) DeepCopyInto(out *JVMExceptionSpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
	out.JVMClassMethodSpec = in.JVMClassMethodSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMExceptionSpec.
func (in *JVMExceptionSpec) DeepCopy() *JVMExceptionSpec {
	if in == nil {
		return nil
	}
	out := new(JVMExceptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMGCSpec) DeepCopyInto(out *JVMGCSpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMGCSpec.
func (in *JVMGCSpec) DeepCopy() *JVMGCSpec {
	if in == nil {
		return nil
	}
	out := new(JVMGCSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMLatencySpec) DeepCopyInto(out *JVMLatencySpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
	out.JVMClassMethodSpec = in.JVMClassMethodSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMLatencySpec.
func (in *JVMLatencySpec) DeepCopy() *JVMLatencySpec {
	if in == nil {
		return nil
	}
	out := new(JVMLatencySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMMySQLSpec) DeepCopyInto(out *JVMMySQLSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMMySQLSpec.
func (in *JVMMySQLSpec) DeepCopy() *JVMMySQLSpec {
	if in == nil {
		return nil
	}
	out := new(JVMMySQLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMParameter) DeepCopyInto(out *JVMParameter) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
	out.JVMClassMethodSpec = in.JVMClassMethodSpec
	out.JVMStressCfgSpec = in.JVMStressCfgSpec
	out.JVMMySQLSpec = in.JVMMySQLSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMParameter.
func (in *JVMParameter) DeepCopy() *JVMParameter {
	if in == nil {
		return nil
	}
	out := new(JVMParameter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMReturnSpec) DeepCopyInto(out *JVMReturnSpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
	out.JVMClassMethodSpec = in.JVMClassMethodSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMReturnSpec.
func (in *JVMReturnSpec) DeepCopy() *JVMReturnSpec {
	if in == nil {
		return nil
	}
	out := new(JVMReturnSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMRuleDataSpec) DeepCopyInto(out *JVMRuleDataSpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMRuleDataSpec.
func (in *JVMRuleDataSpec) DeepCopy() *JVMRuleDataSpec {
	if in == nil {
		return nil
	}
	out := new(JVMRuleDataSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMStressCfgSpec) DeepCopyInto(out *JVMStressCfgSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMStressCfgSpec.
func (in *JVMStressCfgSpec) DeepCopy() *JVMStressCfgSpec {
	if in == nil {
		return nil
	}
	out := new(JVMStressCfgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JVMStressSpec) DeepCopyInto(out *JVMStressSpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JVMStressSpec.
func (in *JVMStressSpec) DeepCopy() *JVMStressSpec {
	if in == nil {
		return nil
	}
	out := new(JVMStressSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaCommonSpec) DeepCopyInto(out *KafkaCommonSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaCommonSpec.
func (in *KafkaCommonSpec) DeepCopy() *KafkaCommonSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaCommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaFillSpec) DeepCopyInto(out *KafkaFillSpec) {
	*out = *in
	out.KafkaCommonSpec = in.KafkaCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaFillSpec.
func (in *KafkaFillSpec) DeepCopy() *KafkaFillSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaFillSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaFloodSpec) DeepCopyInto(out *KafkaFloodSpec) {
	*out = *in
	out.KafkaCommonSpec = in.KafkaCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaFloodSpec.
func (in *KafkaFloodSpec) DeepCopy() *KafkaFloodSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaFloodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KafkaIOSpec) DeepCopyInto(out *KafkaIOSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KafkaIOSpec.
func (in *KafkaIOSpec) DeepCopy() *KafkaIOSpec {
	if in == nil {
		return nil
	}
	out := new(KafkaIOSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in LabelSelectorRequirements) DeepCopyInto(out *LabelSelectorRequirements) {
	{
		in := &in
		*out = make(LabelSelectorRequirements, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelSelectorRequirements.
func (in LabelSelectorRequirements) DeepCopy() LabelSelectorRequirements {
	if in == nil {
		return nil
	}
	out := new(LabelSelectorRequirements)
	in.DeepCopyInto(out)
	return *out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkBandwidthSpec) DeepCopyInto(out *NetworkBandwidthSpec) {
	*out = *in
	if in.Peakrate != nil {
		in, out := &in.Peakrate, &out.Peakrate
		*out = new(uint64)
		**out = **in
	}
	if in.Minburst != nil {
		in, out := &in.Minburst, &out.Minburst
		*out = new(uint32)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkBandwidthSpec.
func (in *NetworkBandwidthSpec) DeepCopy() *NetworkBandwidthSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkBandwidthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCommonSpec) DeepCopyInto(out *NetworkCommonSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCommonSpec.
func (in *NetworkCommonSpec) DeepCopy() *NetworkCommonSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkCommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkCorruptSpec) DeepCopyInto(out *NetworkCorruptSpec) {
	*out = *in
	out.NetworkCommonSpec = in.NetworkCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkCorruptSpec.
func (in *NetworkCorruptSpec) DeepCopy() *NetworkCorruptSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkCorruptSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDNSSpec) DeepCopyInto(out *NetworkDNSSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDNSSpec.
func (in *NetworkDNSSpec) DeepCopy() *NetworkDNSSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkDNSSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDelaySpec) DeepCopyInto(out *NetworkDelaySpec) {
	*out = *in
	out.NetworkCommonSpec = in.NetworkCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDelaySpec.
func (in *NetworkDelaySpec) DeepCopy() *NetworkDelaySpec {
	if in == nil {
		return nil
	}
	out := new(NetworkDelaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDownSpec) DeepCopyInto(out *NetworkDownSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDownSpec.
func (in *NetworkDownSpec) DeepCopy() *NetworkDownSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkDownSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDuplicateSpec) DeepCopyInto(out *NetworkDuplicateSpec) {
	*out = *in
	out.NetworkCommonSpec = in.NetworkCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDuplicateSpec.
func (in *NetworkDuplicateSpec) DeepCopy() *NetworkDuplicateSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkDuplicateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkFloodSpec) DeepCopyInto(out *NetworkFloodSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkFloodSpec.
func (in *NetworkFloodSpec) DeepCopy() *NetworkFloodSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkFloodSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkLossSpec) DeepCopyInto(out *NetworkLossSpec) {
	*out = *in
	out.NetworkCommonSpec = in.NetworkCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkLossSpec.
func (in *NetworkLossSpec) DeepCopy() *NetworkLossSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkLossSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPartitionSpec) DeepCopyInto(out *NetworkPartitionSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPartitionSpec.
func (in *NetworkPartitionSpec) DeepCopy() *NetworkPartitionSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkPartitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PMJVMMySQLSpec) DeepCopyInto(out *PMJVMMySQLSpec) {
	*out = *in
	out.JVMCommonSpec = in.JVMCommonSpec
	out.JVMMySQLSpec = in.JVMMySQLSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PMJVMMySQLSpec.
func (in *PMJVMMySQLSpec) DeepCopy() *PMJVMMySQLSpec {
	if in == nil {
		return nil
	}
	out := new(PMJVMMySQLSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachine) DeepCopyInto(out *PhysicalMachine) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachine.
func (in *PhysicalMachine) DeepCopy() *PhysicalMachine {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachine)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PhysicalMachine) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineChaos) DeepCopyInto(out *PhysicalMachineChaos) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineChaos.
func (in *PhysicalMachineChaos) DeepCopy() *PhysicalMachineChaos {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineChaos)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PhysicalMachineChaos) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineChaosList) DeepCopyInto(out *PhysicalMachineChaosList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PhysicalMachineChaos, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineChaosList.
func (in *PhysicalMachineChaosList) DeepCopy() *PhysicalMachineChaosList {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineChaosList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PhysicalMachineChaosList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineChaosSpec) DeepCopyInto(out *PhysicalMachineChaosSpec) {
	*out = *in
	in.PhysicalMachineSelector.DeepCopyInto(&out.PhysicalMachineSelector)
	in.ExpInfo.DeepCopyInto(&out.ExpInfo)
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineChaosSpec.
func (in *PhysicalMachineChaosSpec) DeepCopy() *PhysicalMachineChaosSpec {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineChaosSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineChaosStatus) DeepCopyInto(out *PhysicalMachineChaosStatus) {
	*out = *in
	in.ChaosStatus.DeepCopyInto(&out.ChaosStatus)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineChaosStatus.
func (in *PhysicalMachineChaosStatus) DeepCopy() *PhysicalMachineChaosStatus {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineChaosStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineList) DeepCopyInto(out *PhysicalMachineList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PhysicalMachine, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineList.
func (in *PhysicalMachineList) DeepCopy() *PhysicalMachineList {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PhysicalMachineList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineSelector) DeepCopyInto(out *PhysicalMachineSelector) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	in.Selector.DeepCopyInto(&out.Selector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineSelector.
func (in *PhysicalMachineSelector) DeepCopy() *PhysicalMachineSelector {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineSelectorSpec) DeepCopyInto(out *PhysicalMachineSelectorSpec) {
	*out = *in
	in.GenericSelectorSpec.DeepCopyInto(&out.GenericSelectorSpec)
	if in.PhysicalMachines != nil {
		in, out := &in.PhysicalMachines, &out.PhysicalMachines
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineSelectorSpec.
func (in *PhysicalMachineSelectorSpec) DeepCopy() *PhysicalMachineSelectorSpec {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineSelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhysicalMachineSpec) DeepCopyInto(out *PhysicalMachineSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhysicalMachineSpec.
func (in *PhysicalMachineSpec) DeepCopy() *PhysicalMachineSpec {
	if in == nil {
		return nil
	}
	out := new(PhysicalMachineSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelector) DeepCopyInto(out *PodSelector) {
	*out = *in
	in.Selector.DeepCopyInto(&out.Selector)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelector.
func (in *PodSelector) DeepCopy() *PodSelector {
	if in == nil {
		return nil
	}
	out := new(PodSelector)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PodSelectorSpec) DeepCopyInto(out *PodSelectorSpec) {
	*out = *in
	in.GenericSelectorSpec.DeepCopyInto(&out.GenericSelectorSpec)
	if in.Nodes != nil {
		in, out := &in.Nodes, &out.Nodes
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Pods != nil {
		in, out := &in.Pods, &out.Pods
		*out = make(map[string][]string, len(*in))
		for key, val := range *in {
			var outVal []string
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = make([]string, len(*in))
				copy(*out, *in)
			}
			(*out)[key] = outVal
		}
	}
	if in.NodeSelectors != nil {
		in, out := &in.NodeSelectors, &out.NodeSelectors
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.PodPhaseSelectors != nil {
		in, out := &in.PodPhaseSelectors, &out.PodPhaseSelectors
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PodSelectorSpec.
func (in *PodSelectorSpec) DeepCopy() *PodSelectorSpec {
	if in == nil {
		return nil
	}
	out := new(PodSelectorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ProcessSpec) DeepCopyInto(out *ProcessSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ProcessSpec.
func (in *ProcessSpec) DeepCopy() *ProcessSpec {
	if in == nil {
		return nil
	}
	out := new(ProcessSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Record) DeepCopyInto(out *Record) {
	*out = *in
	if in.Events != nil {
		in, out := &in.Events, &out.Events
		*out = make([]RecordEvent, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Record.
func (in *Record) DeepCopy() *Record {
	if in == nil {
		return nil
	}
	out := new(Record)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordEvent) DeepCopyInto(out *RecordEvent) {
	*out = *in
	if in.Timestamp != nil {
		in, out := &in.Timestamp, &out.Timestamp
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordEvent.
func (in *RecordEvent) DeepCopy() *RecordEvent {
	if in == nil {
		return nil
	}
	out := new(RecordEvent)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisCacheLimitSpec) DeepCopyInto(out *RedisCacheLimitSpec) {
	*out = *in
	out.RedisCommonSpec = in.RedisCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisCacheLimitSpec.
func (in *RedisCacheLimitSpec) DeepCopy() *RedisCacheLimitSpec {
	if in == nil {
		return nil
	}
	out := new(RedisCacheLimitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisCommonSpec) DeepCopyInto(out *RedisCommonSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisCommonSpec.
func (in *RedisCommonSpec) DeepCopy() *RedisCommonSpec {
	if in == nil {
		return nil
	}
	out := new(RedisCommonSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisExpirationSpec) DeepCopyInto(out *RedisExpirationSpec) {
	*out = *in
	out.RedisCommonSpec = in.RedisCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisExpirationSpec.
func (in *RedisExpirationSpec) DeepCopy() *RedisExpirationSpec {
	if in == nil {
		return nil
	}
	out := new(RedisExpirationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisPenetrationSpec) DeepCopyInto(out *RedisPenetrationSpec) {
	*out = *in
	out.RedisCommonSpec = in.RedisCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisPenetrationSpec.
func (in *RedisPenetrationSpec) DeepCopy() *RedisPenetrationSpec {
	if in == nil {
		return nil
	}
	out := new(RedisPenetrationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisSentinelRestartSpec) DeepCopyInto(out *RedisSentinelRestartSpec) {
	*out = *in
	out.RedisCommonSpec = in.RedisCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisSentinelRestartSpec.
func (in *RedisSentinelRestartSpec) DeepCopy() *RedisSentinelRestartSpec {
	if in == nil {
		return nil
	}
	out := new(RedisSentinelRestartSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RedisSentinelStopSpec) DeepCopyInto(out *RedisSentinelStopSpec) {
	*out = *in
	out.RedisCommonSpec = in.RedisCommonSpec
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RedisSentinelStopSpec.
func (in *RedisSentinelStopSpec) DeepCopy() *RedisSentinelStopSpec {
	if in == nil {
		return nil
	}
	out := new(RedisSentinelStopSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Schedule) DeepCopyInto(out *Schedule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Schedule.
func (in *Schedule) DeepCopy() *Schedule {
	if in == nil {
		return nil
	}
	out := new(Schedule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Schedule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleItem) DeepCopyInto(out *ScheduleItem) {
	*out = *in
	in.EmbedChaos.DeepCopyInto(&out.EmbedChaos)
	if in.Workflow != nil {
		in, out := &in.Workflow, &out.Workflow
		*out = new(WorkflowSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleItem.
func (in *ScheduleItem) DeepCopy() *ScheduleItem {
	if in == nil {
		return nil
	}
	out := new(ScheduleItem)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleList) DeepCopyInto(out *ScheduleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Schedule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleList.
func (in *ScheduleList) DeepCopy() *ScheduleList {
	if in == nil {
		return nil
	}
	out := new(ScheduleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ScheduleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleSpec) DeepCopyInto(out *ScheduleSpec) {
	*out = *in
	if in.StartingDeadlineSeconds != nil {
		in, out := &in.StartingDeadlineSeconds, &out.StartingDeadlineSeconds
		*out = new(int64)
		**out = **in
	}
	in.ScheduleItem.DeepCopyInto(&out.ScheduleItem)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleSpec.
func (in *ScheduleSpec) DeepCopy() *ScheduleSpec {
	if in == nil {
		return nil
	}
	out := new(ScheduleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScheduleStatus) DeepCopyInto(out *ScheduleStatus) {
	*out = *in
	if in.Active != nil {
		in, out := &in.Active, &out.Active
		*out = make([]v1.ObjectReference, len(*in))
		copy(*out, *in)
	}
	in.LastScheduleTime.DeepCopyInto(&out.LastScheduleTime)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScheduleStatus.
func (in *ScheduleStatus) DeepCopy() *ScheduleStatus {
	if in == nil {
		return nil
	}
	out := new(ScheduleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCheck) DeepCopyInto(out *StatusCheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCheck.
func (in *StatusCheck) DeepCopy() *StatusCheck {
	if in == nil {
		return nil
	}
	out := new(StatusCheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StatusCheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCheckCondition) DeepCopyInto(out *StatusCheckCondition) {
	*out = *in
	if in.LastProbeTime != nil {
		in, out := &in.LastProbeTime, &out.LastProbeTime
		*out = (*in).DeepCopy()
	}
	if in.LastTransitionTime != nil {
		in, out := &in.LastTransitionTime, &out.LastTransitionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCheckCondition.
func (in *StatusCheckCondition) DeepCopy() *StatusCheckCondition {
	if in == nil {
		return nil
	}
	out := new(StatusCheckCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCheckList) DeepCopyInto(out *StatusCheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]StatusCheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCheckList.
func (in *StatusCheckList) DeepCopy() *StatusCheckList {
	if in == nil {
		return nil
	}
	out := new(StatusCheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *StatusCheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCheckRecord) DeepCopyInto(out *StatusCheckRecord) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCheckRecord.
func (in *StatusCheckRecord) DeepCopy() *StatusCheckRecord {
	if in == nil {
		return nil
	}
	out := new(StatusCheckRecord)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCheckSpec) DeepCopyInto(out *StatusCheckSpec) {
	*out = *in
	if in.Duration != nil {
		in, out := &in.Duration, &out.Duration
		*out = new(string)
		**out = **in
	}
	if in.EmbedStatusCheck != nil {
		in, out := &in.EmbedStatusCheck, &out.EmbedStatusCheck
		*out = new(EmbedStatusCheck)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCheckSpec.
func (in *StatusCheckSpec) DeepCopy() *StatusCheckSpec {
	if in == nil {
		return nil
	}
	out := new(StatusCheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StatusCheckStatus) DeepCopyInto(out *StatusCheckStatus) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]StatusCheckCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Records != nil {
		in, out := &in.Records, &out.Records
		*out = make([]StatusCheckRecord, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StatusCheckStatus.
func (in *StatusCheckStatus) DeepCopy() *StatusCheckStatus {
	if in == nil {
		return nil
	}
	out := new(StatusCheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressCPUSpec) DeepCopyInto(out *StressCPUSpec) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressCPUSpec.
func (in *StressCPUSpec) DeepCopy() *StressCPUSpec {
	if in == nil {
		return nil
	}
	out := new(StressCPUSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StressMemorySpec) DeepCopyInto(out *StressMemorySpec) {
	*out = *in
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StressMemorySpec.
func (in *StressMemorySpec) DeepCopy() *StressMemorySpec {
	if in == nil {
		return nil
	}
	out := new(StressMemorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Task) DeepCopyInto(out *Task) {
	*out = *in
	if in.Container != nil {
		in, out := &in.Container, &out.Container
		*out = new(v1.Container)
		(*in).DeepCopyInto(*out)
	}
	if in.Volumes != nil {
		in, out := &in.Volumes, &out.Volumes
		*out = make([]v1.Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Task.
func (in *Task) DeepCopy() *Task {
	if in == nil {
		return nil
	}
	out := new(Task)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Template) DeepCopyInto(out *Template) {
	*out = *in
	if in.Deadline != nil {
		in, out := &in.Deadline, &out.Deadline
		*out = new(string)
		**out = **in
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(Task)
		(*in).DeepCopyInto(*out)
	}
	if in.Children != nil {
		in, out := &in.Children, &out.Children
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConditionalBranches != nil {
		in, out := &in.ConditionalBranches, &out.ConditionalBranches
		*out = make([]ConditionalBranch, len(*in))
		copy(*out, *in)
	}
	if in.EmbedChaos != nil {
		in, out := &in.EmbedChaos, &out.EmbedChaos
		*out = new(EmbedChaos)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(ChaosOnlyScheduleSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.StatusCheck != nil {
		in, out := &in.StatusCheck, &out.StatusCheck
		*out = new(StatusCheckSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Template.
func (in *Template) DeepCopy() *Template {
	if in == nil {
		return nil
	}
	out := new(Template)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserDefinedSpec) DeepCopyInto(out *UserDefinedSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserDefinedSpec.
func (in *UserDefinedSpec) DeepCopy() *UserDefinedSpec {
	if in == nil {
		return nil
	}
	out := new(UserDefinedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VMSpec) DeepCopyInto(out *VMSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VMSpec.
func (in *VMSpec) DeepCopy() *VMSpec {
	if in == nil {
		return nil
	}
	out := new(VMSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Workflow) DeepCopyInto(out *Workflow) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Workflow.
func (in *Workflow) DeepCopy() *Workflow {
	if in == nil {
		return nil
	}
	out := new(Workflow)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Workflow) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowCondition) DeepCopyInto(out *WorkflowCondition) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowCondition.
func (in *WorkflowCondition) DeepCopy() *WorkflowCondition {
	if in == nil {
		return nil
	}
	out := new(WorkflowCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowList) DeepCopyInto(out *WorkflowList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Workflow, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowList.
func (in *WorkflowList) DeepCopy() *WorkflowList {
	if in == nil {
		return nil
	}
	out := new(WorkflowList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowNode) DeepCopyInto(out *WorkflowNode) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowNode.
func (in *WorkflowNode) DeepCopy() *WorkflowNode {
	if in == nil {
		return nil
	}
	out := new(WorkflowNode)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowNode) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowNodeCondition) DeepCopyInto(out *WorkflowNodeCondition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowNodeCondition.
func (in *WorkflowNodeCondition) DeepCopy() *WorkflowNodeCondition {
	if in == nil {
		return nil
	}
	out := new(WorkflowNodeCondition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowNodeList) DeepCopyInto(out *WorkflowNodeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]WorkflowNode, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowNodeList.
func (in *WorkflowNodeList) DeepCopy() *WorkflowNodeList {
	if in == nil {
		return nil
	}
	out := new(WorkflowNodeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *WorkflowNodeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowNodeSpec) DeepCopyInto(out *WorkflowNodeSpec) {
	*out = *in
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.Deadline != nil {
		in, out := &in.Deadline, &out.Deadline
		*out = (*in).DeepCopy()
	}
	if in.Task != nil {
		in, out := &in.Task, &out.Task
		*out = new(Task)
		(*in).DeepCopyInto(*out)
	}
	if in.Children != nil {
		in, out := &in.Children, &out.Children
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.ConditionalBranches != nil {
		in, out := &in.ConditionalBranches, &out.ConditionalBranches
		*out = make([]ConditionalBranch, len(*in))
		copy(*out, *in)
	}
	if in.EmbedChaos != nil {
		in, out := &in.EmbedChaos, &out.EmbedChaos
		*out = new(EmbedChaos)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedule != nil {
		in, out := &in.Schedule, &out.Schedule
		*out = new(ScheduleSpec)
		(*in).DeepCopyInto(*out)
	}
	if in.StatusCheck != nil {
		in, out := &in.StatusCheck, &out.StatusCheck
		*out = new(StatusCheckSpec)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowNodeSpec.
func (in *WorkflowNodeSpec) DeepCopy() *WorkflowNodeSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowNodeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowNodeStatus) DeepCopyInto(out *WorkflowNodeStatus) {
	*out = *in
	if in.ChaosResource != nil {
		in, out := &in.ChaosResource, &out.ChaosResource
		*out = new(v1.TypedLocalObjectReference)
		(*in).DeepCopyInto(*out)
	}
	if in.ConditionalBranchesStatus != nil {
		in, out := &in.ConditionalBranchesStatus, &out.ConditionalBranchesStatus
		*out = new(ConditionalBranchesStatus)
		(*in).DeepCopyInto(*out)
	}
	if in.ActiveChildren != nil {
		in, out := &in.ActiveChildren, &out.ActiveChildren
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.FinishedChildren != nil {
		in, out := &in.FinishedChildren, &out.FinishedChildren
		*out = make([]v1.LocalObjectReference, len(*in))
		copy(*out, *in)
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]WorkflowNodeCondition, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowNodeStatus.
func (in *WorkflowNodeStatus) DeepCopy() *WorkflowNodeStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowNodeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowSpec) DeepCopyInto(out *WorkflowSpec) {
	*out = *in
	if in.Templates != nil {
		in, out := &in.Templates, &out.Templates
		*out = make([]Template, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowSpec.
func (in *WorkflowSpec) DeepCopy() *WorkflowSpec {
	if in == nil {
		return nil
	}
	out := new(WorkflowSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WorkflowStatus) DeepCopyInto(out *WorkflowStatus) {
	*out = *in
	if in.EntryNode != nil {
		in, out := &in.EntryNode, &out.EntryNode
		*out = new(string)
		**out = **in
	}
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.EndTime != nil {
		in, out := &in.EndTime, &out.EndTime
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]WorkflowCondition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WorkflowStatus.
func (in *WorkflowStatus) DeepCopy() *WorkflowStatus {
	if in == nil {
		return nil
	}
	out := new(WorkflowStatus)
	in.DeepCopyInto(out)
	return out
}
